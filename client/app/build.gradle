plugins {
    id 'com.android.application'
    id 'com.google.protobuf'
}

android {
    compileSdk 31

    defaultConfig {
        applicationId "com.example.accumo"
        minSdk 30
        targetSdk 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                cppFlags "-std=c++17 -frtti -fexceptions"
                arguments "-DOpenCV_DIR=OpenCV-android-sdk/sdk/native/jni" // , "-DANDROID_ARM_NEON=TRUE"
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    externalNativeBuild {
        cmake {
            path file('src/main/cpp/CMakeLists.txt')
            version '3.10.2'
        }
    }
    buildFeatures {
        viewBinding true
        mlModelBinding true
    }
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    compileOnly 'org.projectlombok:lombok:1.18.22'
    annotationProcessor 'org.projectlombok:lombok:1.18.22'
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-csv:2.13.2'
    implementation 'org.tensorflow:tensorflow-lite:2.0.0'
    implementation 'org.tensorflow:tensorflow-lite-support:0.3.1'
    implementation 'org.tensorflow:tensorflow-lite-metadata:0.3.1'
    implementation 'org.tensorflow:tensorflow-lite-gpu:2.7.0'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    implementation 'org.ejml:ejml-all:0.41'
    implementation project(':opencv')
    implementation 'io.grpc:grpc-protobuf-lite:1.37.0'
    implementation 'com.opencsv:opencsv:5.6'
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.16.0"
    }
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java { option 'lite' }
                python { }
            }
        }
    }
}